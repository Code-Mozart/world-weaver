openapi: '3.0.3'
info:
  title: World Weaver API
  version: 'dev'
servers:
  - url: http://localhost:5173/api
paths:
  /worlds:
    post:
      summary: Create a new world
      description: Creates a new world and returns the CUID.
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  worldCUID:
                    $ref: '#/components/schemas/CUID'
  /worlds/{worldCUID}:
    parameters:
      - $ref: '#/components/parameters/worldCUID'
    patch:
      summary: Uploads changes to the world
      description: |
        Uploads a list of deltas on the world which will be applied to the world.
        We decided to implement changes to the world with a list of deltas because
        this way we can:
        - have a unified interface for all changes, which enables us to do
          bulk updates out-of-the-box
        - track all changes to the world and allow persistent undo/redo
        - allow collaboration of multiple world authors (at least in theory)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                author:
                  allOf:
                    - $ref: '#/components/schemas/PersistedOrTemporaryCUID'
                    - description: |
                        The author of the deltas. Make sure to add the author
                        in the world document with a `World.Documents.WorldDocument.authors.ADD`
                        delta, otherwise the request will fail.
                deltas:
                  type: array
                  items:
                    $ref: '#/components/schemas/Delta'
                  minItems: 1
              required:
                - deltas
      responses:
        '200':
          description: OK. Deltas were applied to the world.
        '400':
          description: |
            Invalid request parameters. Most likely there was a problem withing any of the deltas.
            A detailed description of the error can be found in the response body.
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
        '404':
          description: World not found
        '409':
          description: |
            Conflict. The world has been modified since the last time it was loaded
            and the changes can not be merged.
            A detailed description of the error can be found in the response body.
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
components:
  schemas:
    CUID:
      type: string
      nullable: false
      format: cuid
      example: cm4xauf1e000008jecktg1vvb
    PersistedID:
      type: integer
      nullable: false
      description: The id of the record which is persisted in the database.
    TemporaryCUID:
      allOf:
        - $ref: '#/components/schemas/CUID'
        - description: |
            A temporary CUID which is used for all records for which the id is not known,
            because the record is not yet persisted and a id has not been generated by the
            database yet.
    PersistedOrTemporaryCUID:
      allOf:
        - description: |
            Either an existing CUID or a temporary CUID that must exist
            within the same request.
        - oneOf:
            - type: object
              properties:
                CUID:
                  $ref: '#/components/schemas/CUID'
              required:
                - CUID
            - type: object
              properties:
                temporaryCUID:
                  $ref: '#/components/schemas/TemporaryCUID'
              required:
                - temporaryCUID
    IdOrTemporaryCUID:
      allOf:
        - description: |
            Either the id of the record or a temporary CUID that must exist
            within the same request.
        - oneOf:
            - type: object
              properties:
                id:
                  $ref: '#/components/schemas/PersistedID'
              required:
                - id
            - type: object
              properties:
                temporaryCUID:
                  $ref: '#/components/schemas/TemporaryCUID'
              required:
                - temporaryCUID
    GroundType:
      type: string
      nullable: false
      enum:
        - land
        - water
        - lava
        - void
    Position:
      type: object
      properties:
        x:
          type: number
          nullable: false
        y:
          type: number
          nullable: false
      required:
        - x
        - y
    NewPolygon:
      type: object
      properties:
        temporaryCUID:
          $ref: '#/components/schemas/TemporaryCUID'
        points:
          type: array
          items:
            $ref: '#/components/schemas/IdOrTemporaryCUID'
          minItems: 3
          maxItems: 3
      required:
        - temporaryCUID
        - points
    NewNetwork:
      type: object
      properties:
        temporaryCUID:
          $ref: '#/components/schemas/TemporaryCUID'
        nodes:
          type: array
          items:
            type: object
            properties:
              temporaryCUID:
                $ref: '#/components/schemas/TemporaryCUID'
              point:
                $ref: '#/components/schemas/IdOrTemporaryCUID'
              nextNode:
                allOf:
                  - $ref: '#/components/schemas/IdOrTemporaryCUID'
                  - nullable: true
            required:
              - temporaryCUID
              - point
              - nextNode
          minItems: 2
          maxItems: 2
      required:
        - temporaryCUID
        - nodes
    NewOrExistingPoint:
      oneOf:
        - $ref: '#/components/schemas/IdOrTemporaryCUID'
        - $ref: '#/components/schemas/Position'
    NewOrExistingNode:
      oneOf:
        - description: Reference an existing node.
          type: object
          properties:
            reference:
              $ref: '#/components/schemas/IdOrTemporaryCUID'
          required:
            - reference
        - description: Create a new node.
          type: object
          properties:
            create:
              type: object
              properties:
                temporaryCUID:
                  $ref: '#/components/schemas/TemporaryCUID'
                point:
                  $ref: '#/components/schemas/NewOrExistingPoint'
              required:
                - temporaryCUID
                - point
          required:
            - create
    NewEdgeFromExistingNode:
      description: Insertion of a new edge where the "from" node must already exist.
      type: object
      properties:
        fromNode:
          $ref: '#/components/schemas/IdOrTemporaryCUID'
        toNode:
          $ref: '#/components/schemas/NewOrExistingNode'
      required:
        - fromNode
        - toNode
    NewEdgeToExistingNode:
      description: Insertion of a new edge where the "to" node must already exist.
      type: object
      properties:
        fromNode:
          $ref: '#/components/schemas/NewOrExistingNode'
        toNode:
          $ref: '#/components/schemas/IdOrTemporaryCUID'
      required:
        - fromNode
        - toNode
    Delta:
      type: object
      properties:
        delta:
          type: object
          properties:
            CUID:
              allOf:
                - $ref: '#/components/schemas/CUID'
                - description: The unique CUID of the delta.
            createdAt:
              type: string
              nullable: false
              format: date-time
              description: The date and time when the delta was created.
            type:
              $ref: '#/components/schemas/DeltaType'
          required:
            - CUID
            - createdAt
            - type
        data:
          oneOf:
            - $ref: '#/components/schemas/World.Documents.WorldDocument.name.SET'
            - $ref: '#/components/schemas/World.Documents.WorldDocument.authors.ADD'
            - $ref: '#/components/schemas/World.Documents.WorldDocument.authors.REPLACE'
            - $ref: '#/components/schemas/World.Documents.WorldDocument.authors.REMOVE'
            - $ref: '#/components/schemas/World.Documents.WorldDocument.groundType.SET'

            - $ref: '#/components/schemas/World.Coastlines.CREATE'
            - $ref: '#/components/schemas/World.Coastlines.DELETE'
            - $ref: '#/components/schemas/World.Coastlines.groundType.SET'
            - $ref: '#/components/schemas/World.Coastlines.name.SET'

            - $ref: '#/components/schemas/World.Rivers.CREATE'
            - $ref: '#/components/schemas/World.Rivers.DELETE'
            - $ref: '#/components/schemas/World.Rivers.name.SET'

            - $ref: '#/components/schemas/World.Mountains.CREATE'
            - $ref: '#/components/schemas/World.Mountains.DELETE'
            - $ref: '#/components/schemas/World.Mountains.name.SET'

            - $ref: '#/components/schemas/World.Points.position.SET'

            - $ref: '#/components/schemas/World.Polygons.points.INSERT'
            - $ref: '#/components/schemas/World.Polygons.points.REMOVE'

            - $ref: '#/components/schemas/World.Networks.Edges.INSERT'
            - $ref: '#/components/schemas/World.Networks.Edges.REMOVE'
      required:
        - delta
        - data
    DeltaType:
      type: string
      enum:
        - World.Documents.WorldDocument.name.SET
        - World.Documents.WorldDocument.authors.ADD
        - World.Documents.WorldDocument.authors.REPLACE
        - World.Documents.WorldDocument.authors.REMOVE
        - World.Documents.WorldDocument.groundType.SET

        - World.Coastlines.CREATE
        - World.Coastlines.DELETE
        - World.Coastlines.groundType.SET
        - World.Coastlines.name.SET

        - World.Rivers.CREATE
        - World.Rivers.DELETE
        - World.Rivers.name.SET

        - World.Mountains.CREATE
        - World.Mountains.DELETE
        - World.Mountains.name.SET

        - World.Points.position.SET

        - World.Polygons.points.INSERT
        - World.Polygons.points.REMOVE

        - World.Networks.Edges.INSERT
        - World.Networks.Edges.REMOVE
    World.Documents.WorldDocument.name.SET:
      description: Sets or clears the name of the world in the world document.
      type: object
      properties:
        name:
          type: string
          nullable: true
      required:
        - name
    World.Documents.WorldDocument.authors.ADD:
      description: |
        Adds a new author with the specified CUID to the world document.
        The CUID must not already be used.
      type: object
      properties:
        authorCUID:
          $ref: '#/components/schemas/PersistedOrTemporaryCUID'
        author:
          type: string
          nullable: false
      required:
        - authorCUID
        - author
    World.Documents.WorldDocument.authors.REPLACE:
      description: |
        Replaces the author with the specified CUID in the world document.
      type: object
      properties:
        authorCUID:
          $ref: '#/components/schemas/PersistedOrTemporaryCUID'
        author:
          type: string
          nullable: false
      required:
        - authorCUID
        - author
    World.Documents.WorldDocument.authors.REMOVE:
      description: |
        Removes the author with the specified CUID from the world document.
      type: object
      properties:
        authorCUID:
          $ref: '#/components/schemas/PersistedOrTemporaryCUID'
      required:
        - authorCUID
    World.Documents.WorldDocument.groundType.SET:
      description: Sets the ground type of the world in the world document.
      type: object
      properties:
        groundType:
          $ref: '#/components/schemas/GroundType'
      required:
        - groundType
    World.Coastlines.CREATE:
      description: |
        Creates a new coastline and a corresponding triangle as polygon. May create
        points at the specified positions.
      type: object
      properties:
        temporaryCUID:
          $ref: '#/components/schemas/TemporaryCUID'
        name:
          type: string
          nullable: true
        groundType:
          $ref: '#/components/schemas/GroundType'
        shape:
          $ref: '#/components/schemas/NewPolygon'
      required:
        - temporaryCUID
        - name
        - groundType
        - shape
    World.Coastlines.DELETE:
      description: |
        Deletes a coastline. May also delete the polygon and its points when they
        are no longer referenced by any other object.
      allOf:
        - $ref: '#/components/schemas/IdOrTemporaryCUID'
    World.Coastlines.groundType.SET:
      description: Sets the ground type of a coastline.
      type: object
      properties:
        groundType:
          $ref: '#/components/schemas/GroundType'
      required:
        - groundType
    World.Coastlines.name.SET:
      description: Sets or clears the name of a coastline.
      type: object
      properties:
        name:
          type: string
          nullable: true
      required:
        - name
    World.Rivers.CREATE:
      description: |
        Creates a new river and a corresponding network with exactly 1 edge
        and 2 nodes. May create points at the specified positions.
      type: object
      properties:
        temporaryCUID:
          $ref: '#/components/schemas/TemporaryCUID'
        name:
          type: string
          nullable: true
        path:
          $ref: '#/components/schemas/NewNetwork'
      required:
        - temporaryCUID
        - name
        - path
    World.Rivers.DELETE:
      description: |
        Deletes a river. May also delete the network and its points when they
        are no longer referenced by any other object.
      allOf:
        - $ref: '#/components/schemas/IdOrTemporaryCUID'
    World.Rivers.name.SET:
      description: Sets or clears the name of a river.
      type: object
      properties:
        name:
          type: string
          nullable: true
      required:
        - name
    World.Mountains.CREATE:
      description: |
        Creates a new mountain and a corresponding network with exactly 1 edge
        and 2 nodes. May create points at the specified positions.
      type: object
      properties:
        temporaryCUID:
          $ref: '#/components/schemas/TemporaryCUID'
        name:
          type: string
          nullable: true
        path:
          $ref: '#/components/schemas/NewNetwork'
      required:
        - temporaryCUID
        - name
        - path
    World.Mountains.DELETE:
      allOf:
        - description: |
            Deletes a mountain. May also delete the network and its points when they
            are no longer referenced by any other object.
        - $ref: '#/components/schemas/IdOrTemporaryCUID'
    World.Mountains.name.SET:
      description: Sets or clears the name of a mountain.
      type: object
      properties:
        name:
          type: string
          nullable: true
      required:
        - name
    World.Points.position.SET:
      allOf:
        - description: Sets the position of a point. The point must already exist.
        - $ref: '#/components/schemas/IdOrTemporaryCUID'
        - $ref: '#/components/schemas/Position'
    World.Polygons.points.INSERT:
      description: |
        Inserts a new point into a polygon given the index into the polygons points array.
        Points are always ordered clockwise around the polygon. The point must not already
        exist in the polygon. The point may be created at the specified position if it does
        not already exist.
      type: object
      properties:
        polygon:
          $ref: '#/components/schemas/IdOrTemporaryCUID'
        index:
          type: integer
          nullable: false
          description: The index into the polygons points array where the new point should be inserted.
        point:
          $ref: '#/components/schemas/NewOrExistingPoint'
      required:
        - polygon
        - index
        - point
    World.Polygons.points.REMOVE:
      description: |
        Removes a point from a polygon. At least 3 points must remain in the polygon
        after removal.
      type: object
      properties:
        polygon:
          $ref: '#/components/schemas/IdOrTemporaryCUID'
        point:
          $ref: '#/components/schemas/IdOrTemporaryCUID'
      required:
        - polygon
        - point
    World.Networks.Edges.INSERT:
      description: |
        Creates a new edge between the "from" and "to" node. One of the nodes must
        already exist, the other one may be created at the specified position. There
        must not already be an edge between the two nodes.
      allOf:
        - type: object
          properties:
            network:
              $ref: '#/components/schemas/IdOrTemporaryCUID'
          required:
            - network
        - oneOf:
            - $ref: '#/components/schemas/NewEdgeFromExistingNode'
            - $ref: '#/components/schemas/NewEdgeToExistingNode'
    World.Networks.Edges.REMOVE:
      description: |
        Deletes an edge from a network. If this is the only edge by which either the
        "from" or "to" node is connected to the network, the node is also deleted.
        Must not be the only edge in the network.
      type: object
      properties:
        network:
          $ref: '#/components/schemas/IdOrTemporaryCUID'
        fromNode:
          $ref: '#/components/schemas/IdOrTemporaryCUID'
        toNode:
          $ref: '#/components/schemas/IdOrTemporaryCUID'
      required:
        - network
        - fromNode
        - toNode
  parameters:
    worldCUID:
      name: worldCUID
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/CUID'
